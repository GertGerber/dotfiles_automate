---
# vars you can lift into defaults/main.yml
ohmybash_theme: "axin"
ohmybash_install_url: "https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh"
ohmybash_install_checksum: "{{ omit }}"   # e.g. "sha256:abc123..." when you choose to pin
home_dir: "{{ ansible_env.HOME }}"
bash_config_src_dir: "bash"

- name: "Bash | Detect oh-my-bash"
  ansible.builtin.stat:
    path: "{{ home_dir }}/.oh-my-bash"
  register: ohmybash

- name: "Bash | Register oh-my-bash state"
  ansible.builtin.set_fact:
    ohmybash_is_installed: "{{ ohmybash.stat.exists }}"

- name: "Bash | Install oh-my-bash"
  when: not ohmybash_is_installed
  block:
    - name: "Bash | Download oh-my-bash install script"
      ansible.builtin.get_url:
        url: "{{ ohmybash_install_url }}"
        dest: "{{ home_dir }}/oh-my-bash.install.sh"
        mode: "0755"
        validate_certs: true
        checksum: "{{ ohmybash_install_checksum | default(omit) }}"
      notify: "Bash | Cleanup oh-my-bash install script"

    - name: "Bash | Run install script (idempotent)"
      ansible.builtin.command:
        cmd: bash "{{ home_dir }}/oh-my-bash.install.sh"
      args:
        creates: "{{ home_dir }}/.oh-my-bash"

- name: "Bash | Refresh oh-my-bash state after install"
  ansible.builtin.stat:
    path: "{{ home_dir }}/.oh-my-bash"
  register: ohmybash_after
  changed_when: false

- name: "Bash | Consolidate oh-my-bash state"
  ansible.builtin.set_fact:
    ohmybash_is_installed: "{{ ohmybash_after.stat.exists }}"

# Base dotfiles – consider template if you need variables
- name: "Bash | Copy .bashrc"
  ansible.builtin.copy:
    src: ".bashrc"
    dest: "{{ home_dir }}/.bashrc"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0644"
    backup: true

- name: "Bash | Copy .profile"
  ansible.builtin.copy:
    src: ".profile"
    dest: "{{ home_dir }}/.profile"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0644"
    backup: true

# Ensure config dirs exist before copying trees
- name: "Bash | Ensure config directories exist"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0755"
  loop:
    - "{{ home_dir }}/.config"
    - "{{ home_dir }}/.config/bash"

- name: "Bash | Copy custom bash config"
  ansible.builtin.copy:
    src: "{{ bash_config_src_dir }}"
    dest: "{{ home_dir }}/.config/"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0644"
    directory_mode: "0755"
    force: true

- name: "Bash | {{ ansible_distribution }} | Identify distribution config"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/os/{{ ansible_distribution }}"
  register: bash_os_distribution_config

- name: "Bash | {{ ansible_os_family }} | Identify os family config"
  ansible.builtin.stat:
    path: "{{ role_path }}/files/os/{{ ansible_os_family }}"
  register: bash_os_family_config
  when: not bash_os_distribution_config.stat.exists

- name: "Bash | Calculate os config src"
  ansible.builtin.set_fact:
    bash_os_config_path: >-
      {{
        (bash_os_distribution_config.stat.exists)
        | ternary('os/' ~ ansible_distribution, (bash_os_family_config.stat.exists | default(false)) | ternary('os/' ~ ansible_os_family, ''))
      }}

- name: "Bash | Copy custom bash config for os"
  ansible.builtin.copy:
    src: "{{ bash_os_config_path }}/"
    dest: "{{ home_dir }}/.config/bash/"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0644"
    force: true
  when: bash_os_config_path | length > 0

# Post-install theming – safe on first run now
- name: "Bash | Ensure OMB custom dir exists"
  ansible.builtin.file:
    path: "{{ home_dir }}/.oh-my-bash/custom"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0755"
  when: ohmybash_is_installed

- name: "Bash | Copy custom bash theme"
  ansible.builtin.copy:
    src: "themes"
    dest: "{{ home_dir }}/.oh-my-bash/custom/"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid | default(ansible_user_id) }}"
    mode: "0644"
    directory_mode: "0755"
    force: true
  when: ohmybash_is_installed

# Prefer one managed block for OMB wiring
- name: "Bash | Ensure oh-my-bash is wired into .bashrc"
  ansible.builtin.blockinfile:
    path: "{{ home_dir }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED OMB"
    block: |
      export OSH="{{ home_dir }}/.oh-my-bash"
      OSH_THEME="{{ ohmybash_theme }}"
      source "$OSH/oh-my-bash.sh"
  when: ohmybash_is_installed

# handlers/main.yml
# - name: Bash | Cleanup oh-my-bash install script
#   ansible.builtin.file:
#     path: "{{ home_dir }}/oh-my-bash.install.sh"
#     state: absent
