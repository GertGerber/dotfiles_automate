---
- name: Run selected roles
  hosts: localhost
  connection: local
  gather_facts: yes
  vars_files:
    - group_vars/all.yml

  tasks:
    - name: Discover available roles in roles/ directory (via find)
      ansible.builtin.find:
        paths: "{{ playbook_dir }}/roles"
        file_type: directory
        depth: 1
      register: role_dirs
      tags: [always]

    - name: Compute available role names
      ansible.builtin.set_fact:
        available_roles: "{{ role_dirs.files | map(attribute='path') | map('basename') | list | difference(['roles']) }}"
      tags: [always]

    - name: Compute role tags provided by user (excluding special tags)
      ansible.builtin.set_fact:
        user_role_tags: "{{ (ansible_run_tags | difference(['all','always'])) | intersect(available_roles) }}"
      tags: [always]

    - name: Compute roles to run (prefer user tags if any, else defaults)
      ansible.builtin.set_fact:
        run_roles: >-
          {{
            (user_role_tags | length > 0)
              | ternary(user_role_tags, (default_roles | default([])))
            | difference(exclude_roles | default([]))
            | intersect(available_roles)
            | unique
            | sort
          }}
      tags: [always]

    - name: Show resolved roles (diagnostic)
      ansible.builtin.debug:
        msg:
          run_roles: "{{ run_roles }}"
          available_roles: "{{ available_roles }}"
          user_role_tags: "{{ user_role_tags }}"
          default_roles: "{{ default_roles | default([]) }}"
      tags: [always]

    - name: No roles resolved - provide hint
      ansible.builtin.debug:
        msg:
          - "No roles to run. Ensure roles exist under {{ playbook_dir }}/roles and default_roles in group_vars/all.yml is set."
      when: run_roles | length == 0
      tags: [always]

    - name: Abort if no roles are resolved
      ansible.builtin.fail:
        msg: "No roles to run. Check roles/ and default_roles in group_vars/all.yml."
      when: run_roles | length == 0

    - name: Run roles
      ansible.builtin.include_role:
        name: "{{ roles_item }}"
        apply:
          tags: ["{{ roles_item }}"]
      loop: "{{ run_roles }}"
      loop_control:
        loop_var: roles_item
      when: run_roles | length > 0
      tags: [always]
