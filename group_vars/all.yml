# ====================================================================
# GertGerber Dotfiles Configuration
# Save as: group_vars/all.yml
# ====================================================================

# --------------------------------------------------------------------
# USER CONFIGURATION
# --------------------------------------------------------------------
git_user_name: "GertGerber"

# --------------------------------------------------------------------
# PROFILE-DRIVEN ROLE SELECTION
# --------------------------------------------------------------------

# Options: basic | minimal | web | devops | full
run_profile: basic

# Exclude roles from the final set (e.g. corp restrictions)
exclude_roles: []  # e.g. [discord, spotify, brave]

# OS-specific role additions (keys map to ansible_system: Darwin | Linux | Windows)
os_role_overrides:
  Darwin:  [raycast, hammerspoon, orbstack, aldente, kitty, ghostty, warp]
  Linux:   [flatpak, nala, alacritty, kitty, ghostty, warp]
  Windows: [winget, pwsh]

# Break profiles into non-recursive pieces
# Base lists (no self-reference)
role_profiles_basic: [system, bash, zoxide]

role_profiles_minimal: "{{ role_profiles_basic
  + ['git','fzf','bat','lsd'] }}"

role_profiles_web: "{{ role_profiles_minimal
  + ['nvm','npm','python','gh','lazygit','neovim','tmux','brave'] }}"

role_profiles_devops: "{{ role_profiles_minimal
  + ['docker','helm','kubectl','k9s','terraform','awscli','azurecli',
     'just','taskfile','btop','ncdu','ssh','sshfs','tmate'] }}"

role_profiles_full: "{{ (role_profiles_web + role_profiles_devops + [
  'starship','zsh','obsidian','alacritty','kitty','ghostty',
  'wireguard','kind','kwctl','goreleaser','nomad',
  '1password','tshark','slides','asciiquarium','whalebrew',
  'zellij','spotify','discord','warp'
]) | unique }}"

# Map staged profiles into a single dictionary (now safe to reference)
role_profiles:
  basic:   "{{ role_profiles_basic }}"
  minimal: "{{ role_profiles_minimal }}"
  web:     "{{ role_profiles_web }}"
  devops:  "{{ role_profiles_devops }}"
  full:    "{{ role_profiles_full }}"


# Resolve OS extras using gathered facts
os_extra_roles: "{{ os_role_overrides.get(ansible_system, []) | default([]) }}"

# Final role selection:
# - Start with the chosen profile
# - Add OS-specific roles via os_extra_roles
# - Remove exclude_roles
# - Deduplicate & sort for deterministic runs
default_roles: >-
  {{ (role_profiles[run_profile] | default(role_profiles['minimal']))
   + (os_role_overrides.get(ansible_system, []))
   | difference(exclude_roles) | unique | sort }}


# --------------------------------------------------------------------
# LANGUAGE / TOOL CONFIGURATION
# --------------------------------------------------------------------

# --- Kubernetes CLI (kubectl) ---
kubectl:
  version: "v1.29.3"  # Pin to a cluster-compatible version

# --- Helm repositories ---
helm:
  repos:
    - { name: traefik,    url: "https://helm.traefik.io/traefik" }
    - { name: prometheus, url: "https://prometheus-community.github.io/helm-charts" }
    - { name: grafana,    url: "https://grafana.github.io/helm-charts" }

# --- Go packages ---
go:
  packages:
    - { package: "github.com/go-task/task/v3/cmd/task@latest", cmd: "task" }
    - { package: "github.com/stern/stern@latest",               cmd: "stern" }
    - { package: "github.com/golangci/golangci-lint/cmd/golangci-lint@latest", cmd: "golangci-lint" }

# --- Python packages ---
python:
  packages:
    - virtualenv
    - pipenv
    - black
    - flake8
    - pytest

# --- Node.js via nvm ---
node:
  default_version: "20"
  packages:
    - yarn
    - typescript
    - eslint
    - prettier
